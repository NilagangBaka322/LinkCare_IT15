@model LinkCare_IT15.Models.DoctorModel.DoctorAppointmentsModel

@{
    ViewBag.Title = "My Schedule · Link Care";
    Layout = "~/Views/Shared/_DoctorLayout.cshtml";
}

<div class="container-fluid">
    <div class="mb-3">
        <h3 class="fw-bold">My Schedule</h3>
        <p class="text-muted">Manage your appointments and calendar view</p>
    </div>

    <div class="lc-card p-3 shadow-sm rounded bg-white">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="mb-0"><i class="bi bi-calendar2 me-2"></i>Doctor's Schedule</h5>
            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#newAppointmentModal">
                + New Appointment
            </button>
        </div>

        <div class="row">
            <!-- Calendar -->
            <div id="calendar-col" class="col-lg-6 mb-4 mb-lg-0">
                <h6 class="fw-bold mb-2">Calendar View</h6>
                <div class="p-2 border rounded bg-light">
                    <div id="calendar"></div>
                </div>
            </div>

            <!-- Today's Schedule -->
            <div id="schedule-col" class="col-lg-6">
                <h6 class="fw-bold mb-2">Today's Schedule</h6>
                <p class="small text-muted">@Model.Schedule.Appointments.Count apts</p>
                <div class="list-group">
                    @foreach (var appt in Model.Schedule.Appointments.OrderBy(a => a.StartDate))
                    {
                        var displayName = !string.IsNullOrEmpty(appt.PatientName)
                        ? appt.PatientName
                        : !string.IsNullOrEmpty(appt.WalkInName)
                        ? appt.WalkInName
                        : "Unknown";

                        string statusText = appt.Status?.ToLower() ?? "scheduled";
                        string badgeClass = statusText switch
                        {
                            "completed" => "bg-success-subtle text-success",
                            "cancelled" => "bg-danger-subtle text-danger",
                            _ => "bg-primary-subtle text-primary"
                        };

                        <div class="list-group-item d-flex justify-content-between align-items-start mb-2 rounded shadow-sm">
                            <div>
                                <div class="fw-semibold text-primary">
                                    <i class="bi bi-clock me-1"></i>@appt.StartDate.ToString("HH:mm")
                                </div>
                                <div>@displayName</div>
                                <small class="text-muted">@appt.Title</small>
                            </div>
                            <span class="badge rounded-pill @badgeClass align-self-center">
                                @statusText
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- New Appointment Modal -->
    <div class="modal fade" id="newAppointmentModal" tabindex="-1" aria-labelledby="newAppointmentLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="newAppointmentForm" class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">New Appointment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">

                    <!-- Patient Type -->
                    <div class="mb-3">
                        <label class="form-label">Patient Type</label>
                        <div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="patientType" id="patientTypeRegistered" value="registered" checked>
                                <label class="form-check-label" for="patientTypeRegistered">Registered</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="patientType" id="patientTypeWalkin" value="walkin">
                                <label class="form-check-label" for="patientTypeWalkin">Walk-in</label>
                            </div>
                        </div>
                    </div>

                    <!-- Registered Patient Search -->
                    <div class="mb-3" id="registeredPatientContainer">
                        <label class="form-label">Select Registered Patient</label>
                        <select id="patientId" class="form-select">
                            <option value="">-- Select Patient --</option>
                            @foreach (var p in Model.Schedule.Patients)
                            {
                                <option value="@p.Value">@(string.IsNullOrEmpty(p.Text) ? "[No Name]" : p.Text)</option>
                            }
                        </select>
                    </div>


                    <!-- Walk-in Patient -->
                    <div id="walkinPatientContainer" class="d-none">
                        <div class="mb-3">
                            <label for="walkinFirstName" class="form-label">First Name</label>
                            <input type="text" id="walkinFirstName" class="form-control" placeholder="First Name">
                        </div>
                        <div class="mb-3">
                            <label for="walkinLastName" class="form-label">Last Name</label>
                            <input type="text" id="walkinLastName" class="form-control" placeholder="Last Name">
                        </div>
                    </div>

                    <!-- Appointment Title -->
                    <div class="mb-3">
                        <label for="title" class="form-label">Appointment Title</label>
                        <input type="text" id="title" class="form-control" placeholder="Reason / Title">
                    </div>

                    <!-- Start / End Date -->
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date & Time</label>
                        <input type="datetime-local" id="startDate" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date & Time</label>
                        <input type="datetime-local" id="endDate" class="form-control">
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Register Appointment</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/doctorappointments.css" />
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>

    <script>
        // Pass server-side appointments to JS
        window.doctorAppointments = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.Schedule.Appointments.Select(a => new
        {
            id = a.Id,
            title = a.Title,
            patientName = a.PatientName,
            walkInName = a.WalkInName,
            startDate = a.StartDate.ToString("s"),
            endDate = a.EndDate.ToString("s"),
            status = a.Status
        })
    ));
    </script>

    <script src="~/js/doctorappointments.js"></script>
}
